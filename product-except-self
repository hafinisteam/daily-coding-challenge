### Problem
```
Given an array of integers, return a new array such that each element at index i of the new array is the product of all the numbers in the original array except the one at i.
For example, if our input was [1, 2, 3, 4, 5], the expected output would be [120, 60, 40, 30, 24]. If our input was [3, 2, 1], the expected output would be [2, 3, 6].
Follow-up: what if you can't use division?
```
### Solution

```
1. Loop from left side to right
2. Create a variable element at position times
2. Loop from right side
3. Create a variable element at position times
```

### Code
```
const productExceptSelf = (arr) => {
  let result = [1];
  let leftTimes = 1;
  let rightTimes = 1;

  for(let i = 0; i < arr.length; i++){
    result[i] *= leftTimes
    leftTimes *= arr[i]
  }

  for(let i = arr.length - 1; i >= 0; i--){
    result[i] *= rightTimes
    rightTimes *= arr[i]
  }

  return result;
};
```

Link: https://codesandbox.io/s/product-except-self-2h95c2
